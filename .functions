# Create a data URL from a file
function dataurl() {
  local mimeType=$(file -b --mime-type "$1");
  if [[ $mimeType == text/* ]]; then
    mimeType="${mimeType};charset=utf-8";
  fi
  echo "data:${mimeType};base64,$(openssl base64 -in "$1" | tr -d '\n')";
}

function dotenv() {
  eval $(cat .env | sed 's/^/export /')
}

time_request () {
  curl -o /dev/null -s -w %{time_total}\\n $1
}

extract () {
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2)   tar xjf $1     ;;
      *.tar.gz)    tar xzf $1     ;;
      *.bz2)       bunzip2 $1     ;;
      *.rar)       unrar e $1     ;;
      *.gz)        gunzip $1      ;;
      *.tar)       tar xf $1      ;;
      *.tbz2)      tar xjf $1     ;;
      *.tgz)       tar xzf $1     ;;
      *.zip)       unzip $1       ;;
      *.Z)         uncompress $1  ;;
      *.7z)        7z x $1        ;;
      *)     echo "'$1' cannot be extracted via extract()" ;;
        esac
  else
      echo "'$1' is not a valid file"
  fi
}

tmux_send_command() {
  if [[ $# -eq 0 || "$1" = "--help" ]] ; then
    echo 'Usage: _send_bash_command_to_session $session_name what ever command you want: '
    return
  fi
  input_session="$1"
  input_command="${@:2}"
  for _pane in $(tmux list-panes -s -t ${input_session} -F '#{window_index}.#{pane_index}'); do
    # only apply the command in bash or zsh panes.
    _current_command=$(tmux display-message -p -t ${input_session}:${_pane} '#{pane_current_command}')
    if [ ${_current_command} = zsh ] || [ ${_current_command} = bash ] ; then
      tmux send-keys -t ${_pane} "${input_command}" Enter
    fi
  done
}
